CREATE SEQUENCE YENER.SEQ_PERSON START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE YENER.SEQ_MOVIE START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE YENER.SEQ_ASSOCIATION START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
  CREATE TABLE YENER.ACTOR
    (
      ID          NUMBER(10) PRIMARY KEY,
      NAME        VARCHAR2(20),
      SURNAME     VARCHAR2(20),
      MIDDLE_NAME VARCHAR2(15),
      COUNTRY_ID  NUMBER(3),
      BIRTH_DATE  DATE,
      SEX VARCHAR2(1)
    );
  CREATE TABLE YENER.DIRECTOR
    (
      ID          NUMBER(10) PRIMARY KEY,
      NAME        VARCHAR2(20),
      SURNAME     VARCHAR2(20),
      MIDDLE_NAME VARCHAR2(15),
      COUNTRY_ID  NUMBER(3),
      BIRTH_DATE  DATE,
      SEX VARCHAR2(1)
    );
  CREATE TABLE YENER.GENRE
    (ID NUMBER(2) PRIMARY KEY, GENRE_NAME VARCHAR2(25)
    );
  CREATE TABLE YENER.MOVIE
    (
      ID           NUMBER(10) PRIMARY KEY,
      TITLE        VARCHAR2(50),
      RELEASE_DATE DATE
    );
    

  CREATE TABLE YENER.COUNTRY
    (
      ID   NUMBER(3),
      ISO2 VARCHAR2(2),
      ISO3 VARCHAR2(3),
      NAME VARCHAR2(60)
    );
  CREATE TABLE YENER.MOVIE_DIRECTOR
    (
      ID NUMBER PRIMARY KEY,
      MOVIE_ID    NUMBER(10),
      DIRECTOR_ID NUMBER(10),
      CONSTRAINT UNQ_MOVIE_DIRECTOR UNIQUE(MOVIE_ID, DIRECTOR_ID),
      CONSTRAINT FK_MOVIE_DIRECTOR1 FOREIGN KEY(MOVIE_ID) REFERENCES YENER.MOVIE(ID),
      CONSTRAINT FK_MOVIE_DIRECTOR2 FOREIGN KEY(DIRECTOR_ID) REFERENCES YENER.DIRECTOR(ID)
    );
  CREATE TABLE YENER.MOVIE_ACTOR
    (
      ID NUMBER PRIMARY KEY,
      MOVIE_ID NUMBER(10),
      ACTOR_ID NUMBER(10),
      CONSTRAINT UNQ_MOVIE_ACTOR UNIQUE(MOVIE_ID, ACTOR_ID),
      CONSTRAINT FK_MOVIE_ACTOR1 FOREIGN KEY(MOVIE_ID) REFERENCES YENER.MOVIE(ID),
      CONSTRAINT FK_MOVIE_ACTOR2 FOREIGN KEY(ACTOR_ID) REFERENCES YENER.ACTOR(ID)
    );
    CREATE TABLE YENER.MOVIE_GENRE
  (
    MOVIE_ID NUMBER(10),
    GENRE_ID NUMBER(2),
    CONSTRAINT UNQ_MOVIE_GENRE UNIQUE(MOVIE_ID, GENRE_ID),
    CONSTRAINT FK_MOVIE_GENRE1 FOREIGN KEY(MOVIE_ID) REFERENCES MOVIE(ID),
    CONSTRAINT FK_MOVIE_GENRE2 FOREIGN KEY(GENRE_ID) REFERENCES GENRE(ID)
  );